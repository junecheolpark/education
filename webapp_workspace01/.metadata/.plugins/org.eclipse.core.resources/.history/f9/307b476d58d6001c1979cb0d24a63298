package com.board.controller;

import java.io.IOException;
import java.util.ArrayList;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import com.board.dao.BoardDAO;
import com.board.dao.MemberDAO;
import com.board.dto.BoardDTO;
import com.board.dto.MemberDTO;

@WebServlet("*.bo")
public class BoardController extends HttpServlet {
	protected void doGet(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		doAction(request, response);
	}

	protected void doPost(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		doAction(request, response);
	}

	protected void doAction(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {

		String uri = request.getRequestURI();
		System.out.println("요청 uri : " + uri);
		request.setCharacterEncoding("utf-8");

		if (uri.equals("/board.bo")) {// 게시판요청
			// tbl_board 테이블에서 데이터 arrayList 로 가져와 request에 담아주기
			BoardDAO dao = new BoardDAO();
			try {
				ArrayList<BoardDTO> list = dao.selectAll();
				request.setAttribute("list", list);
				for (BoardDTO dto : list) {
					System.out.println(dto.toString());
				
				}
			} catch (Exception e) {
				e.printStackTrace();
			}
			request.getRequestDispatcher("/board/board.jsp").forward(request, response);

		} else if (uri.equals("/writeProc.bo")) {// 글쓰기 요청
//				MemberDTO dto = (MemberDTO)request.getSession().getAttribute("loginSession");
//				String writer_nickname = dto.getNickname();
			MemberDTO dto = (MemberDTO)request.getSession().getAttribute("loginSession");
			String writer_nickname = dto.getNickname();
			String writer_id = dto.getId();
			String title = request.getParameter("title");
			String content = request.getParameter("content");

			System.out.println(writer_nickname + " : " + writer_id + " : " + title + " : " + content);
			
			BoardDAO dao = new BoardDAO();
			try {
				int rs = dao.write(new BoardDTO(0,title,content,writer_nickname,writer_id,0,null));
				if(rs > 0) {
					response.sendRedirect("/board.bo");
				}
			} catch (Exception e) {
				e.printStackTrace();
			}

		} else if (uri.equals("/detailView.bo")) {
			int seq_board = Integer.parseInt(request.getParameter("seq_board"));
			System.out.println("seq_board : " + seq_board);
			
			BoardDAO dao = new BoardDAO();
			try {
				BoardDTO dto= dao.selectBySeq(seq_board);
				String id = ((MemberDTO)request.getSession().getAttribute("loginSession")).getId();
				
				System.out.println("id :" + id);
				
				// 2. 조회해온 데이터 (DTO)를  넘겨줌
				if(dto != null) {// 조회된 값이 있다면 넘겨줌
					System.out.println(dto.toString());
				}else {//조회된 값이 없는경우
					response.sendRedirect("/board.bo");
				}
				request.setAttribute("dto", dto);
				request.getRequestDispatcher("/board/detailView.jsp").forward(request, response);
			}catch(Exception e) {
				e.printStackTrace();
			}

		}else if (uri.equals("/modify.bo")) {
			int seq_board = Integer.parseInt(request.getParameter("seq_board"));
			System.out.println("seq_board : " + seq_board);
			
			BoardDAO dao = new BoardDAO();
			try {
				BoardDTO dto= dao.selectBySeq(seq_board);
				String id = ((MemberDTO)request.getSession().getAttribute("loginSession")).getId();
				
				System.out.println("id :" + id);
				
				// 2. 조회해온 데이터 (DTO)를  넘겨줌
				if(dto != null) {// 조회된 값이 있다면 넘겨줌
					System.out.println(dto.toString());
				}else {//조회된 값이 없는경우
					response.sendRedirect("/board.bo");
				}
				request.setAttribute("dto", dto);
				request.getRequestDispatcher("/board/modify.jsp").forward(request, response);
			}catch(Exception e) {
				e.printStackTrace();
			}

		}else if (uri.equals("/modifyProc.bo")) {
			System.out.println("도착?");
			int seq_board = Integer.parseInt(request.getParameter("seq_board"));
			String content = request.getParameter("content");
			String title = request.getParameter("title");
			BoardDAO dao = new BoardDAO();
			try {
				int rs =dao.modify(title, content, seq_board);
				if (rs > 0) {
					//수정된 값을 바로 확인 가능하게끔 상세페이지 요청
					System.out.println("완료");
					response.sendRedirect("/detailView.bo?seq_board=" + seq_board);
				}
			}catch(Exception e) {
				e.printStackTrace();
			}
		}else if (uri.equals("/deleteProc.bo")) {
			int seq_board = Integer.parseInt(request.getParameter("seq_board"));
			System.out.println("seq_board : " + seq_board);
			
		
			// 시퀀스번호 이용해 tbl_board에서 게시글 삭제
		
			//삭제완료후에
			response.sendRedirect("/board.bo");
		}

	}

}
