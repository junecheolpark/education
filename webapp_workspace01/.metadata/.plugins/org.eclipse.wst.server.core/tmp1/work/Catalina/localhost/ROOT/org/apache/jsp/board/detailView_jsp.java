/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.78
 * Generated at: 2022-05-27 03:14:25 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class detailView_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1652426506894L));
    _jspx_dependants.put("jar:file:/D:/coding/backup/webapp_workspace01/.metadata/.plugins/org.eclipse.wst.server.core/tmp1/wtpwebapps/MVC2_Board/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Detail</title>\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.6.0.js\"></script>\r\n");
      out.write("<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css\"\r\n");
      out.write("	rel=\"stylesheet\"\r\n");
      out.write(">\r\n");
      out.write("<style>\r\n");
      out.write("/* 게시글 스타일 영역*/\r\n");
      out.write(".container-board {\r\n");
      out.write("	width: 80%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".container-board div[class*=row]:not(:first-child) {\r\n");
      out.write("	border: 1px solid lightgrey;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".container-board div[class*=col-2] {\r\n");
      out.write("	display: flex;\r\n");
      out.write("	justify-content: center;\r\n");
      out.write("	align-items: center;\r\n");
      out.write("	font-weight: bold;\r\n");
      out.write("	border-left: 1px solid lightgrey;\r\n");
      out.write("	border-right: 1px solid lightgrey;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".container-board div[class*=col]:not(.content-board:last-child) {\r\n");
      out.write("	display: flex;\r\n");
      out.write("	align-items: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".container-board div[class*=col]>p {\r\n");
      out.write("	margin: 0;\r\n");
      out.write("	padding: 5px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".title-board {\r\n");
      out.write("	height: 50px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".header-board {\r\n");
      out.write("	height: 50px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".content-board {\r\n");
      out.write("	height: 600px;\r\n");
      out.write("}\r\n");
      out.write("/* 게시글 스타일 끝*/\r\n");
      out.write("\r\n");
      out.write("/* 댓글 스타일 */\r\n");
      out.write(".container-reply {\r\n");
      out.write("	margin-top: 10px;\r\n");
      out.write("	margin-bottom: 20px;\r\n");
      out.write("	width: 80%;\r\n");
      out.write("	border: 1px solid lightgrey;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".writer-reply {\r\n");
      out.write("	font-weight: bold;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".date-reply {\r\n");
      out.write("	color: grey;\r\n");
      out.write("	font-size: 12px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".body-header-reply:not(:first-child) {\r\n");
      out.write("	border-top: 1px solid lightgrey;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".content-reply {\r\n");
      out.write("	border: none;\r\n");
      out.write("	width: 100%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#formReply {\r\n");
      out.write("	padding: 0;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".body-btnAfter-reply {\r\n");
      out.write("	display: none;\r\n");
      out.write("}\r\n");
      out.write("/* 댓글 스타일 끝 */\r\n");
      out.write("textarea {\r\n");
      out.write("	resize: none;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".form-control[readonly] {\r\n");
      out.write("	background-color: transparent;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<!-- 게시글 영역 -->\r\n");
      out.write("	<div class=\"container container-board\">\r\n");
      out.write("		<div class=\"row p-5\">\r\n");
      out.write("			<h3 class=\"text-center\">상세보기</h3>\r\n");
      out.write("		</div>\r\n");
      out.write("		<div class=\"row\">\r\n");
      out.write("			<div class=\"col-2 title-board\">\r\n");
      out.write("				<p>제목</p>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"col-10 title-board\">\r\n");
      out.write("				<p>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.title}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</p>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("		<div class=\"row\">\r\n");
      out.write("			<div class=\"col-2 header-board\">\r\n");
      out.write("				<p>글쓴이</p>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"col-4 header-board\">\r\n");
      out.write("				<p>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.writer_nickname}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</p>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"col-2 header-board \">\r\n");
      out.write("				<p>작성일</p>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"col-4 header-board\">\r\n");
      out.write("				<p>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.written_date}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</p>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("		<div class=\"row\">\r\n");
      out.write("			<div class=\"col-3 header-board\">\r\n");
      out.write("				<p>첨부파일</p>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"col-3 header-board\">\r\n");
      out.write("				<p>\r\n");
      out.write("					<a href=\"/download.fi?ori_name=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${file.ori_name}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("&sys_name=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${file.sys_name}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write('"');
      out.write('>');
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${file.ori_name}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</a>\r\n");
      out.write("				</p>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("		<div class=\"row\">\r\n");
      out.write("			<div class=\"col-3\">\r\n");
      out.write("				<p>이미지</p>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"col-9 text-center\">\r\n");
      out.write("				<img class=\"\" style=\"width: 200px\" src=\"/files/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${file.sys_name}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("		<div class=\"row\">\r\n");
      out.write("			<div class=\"col-2 content-board\">\r\n");
      out.write("				<p>내용</p>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"col-10 content-board\">\r\n");
      out.write("				<p>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.content}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</p>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("	<!-- 게시글 영역 끝-->\r\n");
      out.write("	<!-- 댓글 영역 -->\r\n");
      out.write("	<div class=\"container container-reply p-2\">\r\n");
      out.write("		<div class=\"row header-reply\">\r\n");
      out.write("			<div class=\"col\">\r\n");
      out.write("				<h5 class=\"text-center fs-3\">댓글</h5>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("		<!-- 댓글 출력 영역 -->\r\n");
      out.write("		<div class=\"row body-reply p-3\">\r\n");
      out.write("			");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("			");
      if (_jspx_meth_c_005fif_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("		</div>\r\n");
      out.write("		<!-- 댓글 출력 영역 끝-->\r\n");
      out.write("		<!-- 댓글 입력 영역 -->\r\n");
      out.write("		<form id=\"formReply\" name=\"formReply\">\r\n");
      out.write("			<div class=\"row footer-reply p-2 align-items-center\">\r\n");
      out.write("				<div class=\"col d-none\">\r\n");
      out.write("					<input type=\"text\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.seq_board}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" name=\"seq_board\">\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"col-10\">\r\n");
      out.write("					<textarea id=\"inputReply\" id=\"inputReply\" class=\"form-control\" name=\"content\"></textarea>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"col-2\">\r\n");
      out.write("					<button type=\"button\" class=\"btn btn-success\" id=\"btnSubmitReply\">등록</button>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("		</form>\r\n");
      out.write("		<!-- 댓글 입력 영역끝 -->\r\n");
      out.write("	</div>\r\n");
      out.write("	<!-- 댓글 영역 끝 -->\r\n");
      out.write("	<!-- 하단 버튼 영역 -->\r\n");
      out.write("	<div class=\"container container-footer\">\r\n");
      out.write("		<div class=\"row justify-content-center\">\r\n");
      out.write("			<div class=\"col-2\">\r\n");
      out.write("				<button type=\"button\" class=\"btn btn-secondary\" id=\"btnBack\">뒤로가기</button>\r\n");
      out.write("			</div>\r\n");
      out.write("			<!--글쓴이와 로그인한 사용자가 같은 경우 수정 삭제 버튼 영역 -->\r\n");
      out.write("			");
      if (_jspx_meth_c_005fif_005f3(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("			<!-- 수정 삭제 버튼 영역 끝 -->\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("	<script>\r\n");
      out.write("		// 댓글 수정 버튼에게 이벤트 부여\r\n");
      out.write("		$(\".body-reply\").on(\"click\", \".modify-reply\", function(e){\r\n");
      out.write("			$(e.target).parent(\".body-btnDefault-reply\").css(\"display\", \"none\"); // 수정삭제 버튼 감추기\r\n");
      out.write("			$(e.target).parent().next(\".body-btnAfter-reply\").css(\"display\", \"block\"); // 취소완료 버튼 보이기\r\n");
      out.write("			// 댓글 수정가능하게끔 readonly 속성 풀어주기 \r\n");
      out.write("			$(e.target).parent(\".body-btnDefault-reply\").prev().children(\"textarea\").attr(\"readonly\", false);\r\n");
      out.write("			$(e.target).parent(\".body-btnDefault-reply\").prev().children(\"textarea\").focus();\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		// 댓글 수정 완료 버튼을 눌렀을때\r\n");
      out.write("		$(\".body-reply\").on(\"click\", \".complete-reply\", function(e){\r\n");
      out.write("			// 수정한 내용 (textarea value)\r\n");
      out.write("			// 수정한 댓글의 seq (seq_reply)\r\n");
      out.write("			// 게시글의 seq (seq_board)\r\n");
      out.write("			let seq_reply = $(e.target).val();\r\n");
      out.write("			let seq_board = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.seq_board}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\";\r\n");
      out.write("			// 부모의 형제(위쪽으로)요소 중 body-content-reply를 선택하는데 그 중 가장 첫번째 요소 선택\r\n");
      out.write("			let content = $(e.target).parent(\".body-btnAfter-reply\").prevAll(\".body-content-reply\").first().children(\"textarea\").val();\r\n");
      out.write("			\r\n");
      out.write("			$.ajax({\r\n");
      out.write("				url : \"/modifyProc.rp\"\r\n");
      out.write("				, type : \"post\"\r\n");
      out.write("				, data : {seq_reply: seq_reply, seq_board: seq_board, content: content}\r\n");
      out.write("				, success : function(data){\r\n");
      out.write("					console.log(data);\r\n");
      out.write("					if(data === \"fail\"){\r\n");
      out.write("						alert(\"댓글 수정에 실패했습니다.\");\r\n");
      out.write("					}else{\r\n");
      out.write("						makeReply(data);\r\n");
      out.write("					}\r\n");
      out.write("				}, error : function(e){\r\n");
      out.write("					console.log(e);\r\n");
      out.write("				}\r\n");
      out.write("			})\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		// 댓글 취소 버튼에게 이벤트 부여\r\n");
      out.write("		$(\".body-reply\").on(\"click\", \".cancel-reply\", function(e){\r\n");
      out.write("			let seq_board = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.seq_board}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\";\r\n");
      out.write("			$.ajax({\r\n");
      out.write("				url : \"/getReply.rp?seq_board=\"+seq_board\r\n");
      out.write("				, type: \"get\"\r\n");
      out.write("				, success: function(data){\r\n");
      out.write("					makeReply(data);\r\n");
      out.write("				}, error: function(e){\r\n");
      out.write("					console.log(e);\r\n");
      out.write("				}\r\n");
      out.write("			})\r\n");
      out.write("			\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		// 댓글 삭제 버튼에게 이벤트 부여\r\n");
      out.write("		$(\".body-reply\").on(\"click\", \".delete-reply\", function(e){\r\n");
      out.write("			let answer = confirm(\"댓글을 정말 삭제하시겠습니까?\");\r\n");
      out.write("			if(answer){\r\n");
      out.write("				let seq_reply = $(e.target).val();\r\n");
      out.write("				\r\n");
      out.write("				$.ajax({\r\n");
      out.write("					url : \"/deleteProc.rp\"\r\n");
      out.write("					, type : \"post\"\r\n");
      out.write("					, data : {seq_reply: seq_reply, seq_board: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.seq_board}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"}\r\n");
      out.write("					, success : function(data){\r\n");
      out.write("						console.log(data);\r\n");
      out.write("						\r\n");
      out.write("						if(data === \"fail\"){\r\n");
      out.write("							alert(\"댓글 삭제에 실패했습니다.\");\r\n");
      out.write("						}else{ // 댓글 삭제에 성공했다면 댓글 목록을 새롭게 다시 뿌려줌\r\n");
      out.write("							makeReply(data);\r\n");
      out.write("						}\r\n");
      out.write("					}, error : function(e){\r\n");
      out.write("						console.log(e);\r\n");
      out.write("					}\r\n");
      out.write("						\r\n");
      out.write("				})\r\n");
      out.write("			}\r\n");
      out.write("		});	\r\n");
      out.write("	\r\n");
      out.write("		// 댓글 등록\r\n");
      out.write("		$(\"#btnSubmitReply\").on(\"click\", function(){\r\n");
      out.write("			if($(\"#inputReply\").val() === \"\"){ // 댓글 입력창이 비어있다면\r\n");
      out.write("				alert(\"입력된 댓글이 없습니다.\");\r\n");
      out.write("				return;\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("			// ajax를 이용해서 form 전송\r\n");
      out.write("			let data = $(\"#formReply\").serialize(); //전송할 수 있는 데이터로 변환\r\n");
      out.write("			console.log(data);\r\n");
      out.write("			$(\"#inputReply\").val(\"\");\r\n");
      out.write("			\r\n");
      out.write("			$.ajax({\r\n");
      out.write("				url : \"/insert.rp\"\r\n");
      out.write("				, type : \"post\"\r\n");
      out.write("				, data : data\r\n");
      out.write("				// 만약 서버에서 응답해주는 값이 일반 text일 수도 있고\r\n");
      out.write("				// json 형식일 수도 있다면 dataType을 명시하지 않는다.\r\n");
      out.write("				, success: function(rs){\r\n");
      out.write("					console.log(rs);\r\n");
      out.write("					if(rs === \"fail\"){ // 댓글등록에 실패했거나\r\n");
      out.write("						alert(\"댓글 등록에 실패했습니다.\");\r\n");
      out.write("					}else{ // json형식의 데이터가 넘어오거나(댓글리스트)\r\n");
      out.write("						makeReply(rs);\r\n");
      out.write("					}\r\n");
      out.write("				}, error: function(e){\r\n");
      out.write("					console.log(e);\r\n");
      out.write("				}\r\n");
      out.write("			})\r\n");
      out.write("			\r\n");
      out.write("		})\r\n");
      out.write("		\r\n");
      out.write("		function makeReply(rs){\r\n");
      out.write("			/* json 형식의 문자열을 JSON.parse()\r\n");
      out.write("			함수를 통해서 자바스크립트 객체 형식으로 변환 */\r\n");
      out.write("			let list = JSON.parse(rs); // 함수의 매개변수로 받아온 json 형식의 문자열 실제 json 타입으로 변환 \r\n");
      out.write("			console.log(list);\r\n");
      out.write("			\r\n");
      out.write("			// 넘겨받은 최신 댓글 list를 실제 댓글 목록에 다시 뿌려주는 작업 \r\n");
      out.write("			$(\".body-reply\").empty(); // 기존에 있던 댓글 모두 지워주는 작업\r\n");
      out.write("			\r\n");
      out.write("			// list = []; 댓글이 없는 상황을 만드는 테스트용 코드\r\n");
      out.write("			if(list.length == 0){ // 댓글이 없다면 등록된 댓글이 없습니다 띄워주기.\r\n");
      out.write("				let p = $(\"<p>\").addClass(\"text-center\").html(\"등록된 댓글이 없습니다.\");\r\n");
      out.write("				let div = $(\"<div>\").addClass(\"col-12\");\r\n");
      out.write("				div.append(p);\r\n");
      out.write("				$(\".body-reply\").append(div);\r\n");
      out.write("			}else{ // 댓글이 있다면 댓글 목록 만들어서 append 해주기\r\n");
      out.write("				for(let reply of list){\r\n");
      out.write("					// 댓글 타이틀 부분 요소 만들기\r\n");
      out.write("					let writer = $(\"<span>\").addClass(\"writer-reply\").html(reply.writer_nickname);\r\n");
      out.write("					let date = $(\"<span>\").addClass(\"date-reply\").html(reply.written_date);\r\n");
      out.write("					let header = $(\"<div>\").addClass(\"col-12 body-header-reply\");\r\n");
      out.write("					header.append(writer, date);\r\n");
      out.write("					\r\n");
      out.write("					// 댓글 내용 요소 만들기\r\n");
      out.write("					let textarea = $(\"<textarea>\").attr({class: \"form-control content-reply\", readonly: true}).val(reply.content);\r\n");
      out.write("					let content = $(\"<div>\").addClass(\"col-9 body-content-reply\");\r\n");
      out.write("					content.append(textarea);\r\n");
      out.write("					\r\n");
      out.write("					$(\".body-reply\").append(header, content); // 작성자와 같은지 여부 상관없이 댓글은 띄워주기\r\n");
      out.write("					\r\n");
      out.write("					// 댓글작성자 id와 로그인한 사람의 id가 같다면 수정삭제버튼 요소 만들기\r\n");
      out.write("					if(reply.writer_id === \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginSession.id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"){\r\n");
      out.write("						// 수정삭제 버튼 요소\r\n");
      out.write("						let modifyBtn = $(\"<button>\").addClass(\"btn btn-warning modify-reply\").html(\"수정\");\r\n");
      out.write("						let deleteBtn = $(\"<button>\").addClass(\"btn btn-danger delete-reply\").html(\"삭제\").val(reply.seq_reply);\r\n");
      out.write("						let btn1 = $(\"<div>\").addClass(\"col-3 body-btnDefault-reply\");\r\n");
      out.write("						btn1.append(modifyBtn, deleteBtn);\r\n");
      out.write("						// 취소확인 버튼 요소\r\n");
      out.write("						let cancelBtn = $(\"<button>\").addClass(\"btn btn-secondary cancel-reply\").html(\"취소\");\r\n");
      out.write("						let completeBtn = $(\"<button>\").addClass(\"btn btn-primary complete-reply\").html(\"완료\").val(reply.seq_reply);\r\n");
      out.write("						let btn2 = $(\"<div>\").addClass(\"col-3 body-btnAfter-reply\");\r\n");
      out.write("						btn2.append(cancelBtn, completeBtn);\r\n");
      out.write("						\r\n");
      out.write("						$(\".body-reply\").append(btn1, btn2); //작성자와 같다면 실제 요소를 html영역에 추가하기 \r\n");
      out.write("					}							\r\n");
      out.write("				}\r\n");
      out.write("			}\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("        // 뒤로가기 버튼 \r\n");
      out.write("        $(\"#btnBack\").on(\"click\", function() {\r\n");
      out.write("			location.href = \"/board.bo?curPage=1\";\r\n");
      out.write("		});\r\n");
      out.write("	</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f0_reused = false;
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent(null);
      // /board/detailView.jsp(162,3) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${empty replyList}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("				");
          out.write("\r\n");
          out.write("				<div class=\"col-12\">\r\n");
          out.write("					<p class=\"text-center\">등록된 댓글이 없습니다.</p>\r\n");
          out.write("				</div>\r\n");
          out.write("			");
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      _jspx_th_c_005fif_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f1 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f1_reused = false;
    try {
      _jspx_th_c_005fif_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f1.setParent(null);
      // /board/detailView.jsp(168,3) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${not empty replyList}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f1 = _jspx_th_c_005fif_005f1.doStartTag();
      if (_jspx_eval_c_005fif_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("				");
          out.write("\r\n");
          out.write("				");
          if (_jspx_meth_c_005fforEach_005f0(_jspx_th_c_005fif_005f1, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("			");
          int evalDoAfterBody = _jspx_th_c_005fif_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f1);
      _jspx_th_c_005fif_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fif_005f1, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f0_reused = false;
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f1);
      // /board/detailView.jsp(170,4) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/board/detailView.jsp(170,4) '${replyList}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${replyList}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      // /board/detailView.jsp(170,4) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("reply");
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("					<div class=\"co1-12 body-header-reply\">\r\n");
            out.write("						<span class=\"writer-reply\">");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${reply.writer_nickname}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</span> <span class=\"date-reply\">");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${reply.written_date}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</span>\r\n");
            out.write("					</div>\r\n");
            out.write("					<div class=\"col-9 body-content-reply\">\r\n");
            out.write("						<textarea class=\"form-control content-reply\" readonly>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${reply.content}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</textarea>\r\n");
            out.write("					</div>\r\n");
            out.write("					");
            if (_jspx_meth_c_005fif_005f2(_jspx_th_c_005fforEach_005f0, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f0))
              return true;
            out.write("\r\n");
            out.write("				");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
      _jspx_th_c_005fforEach_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f2(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fforEach_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f2 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f2_reused = false;
    try {
      _jspx_th_c_005fif_005f2.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f2.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fforEach_005f0);
      // /board/detailView.jsp(177,5) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f2.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${reply.writer_id eq loginSession.id}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f2 = _jspx_th_c_005fif_005f2.doStartTag();
      if (_jspx_eval_c_005fif_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("						");
          out.write("\r\n");
          out.write("						<div class=\"col-3 body-btnDefault-reply\">\r\n");
          out.write("							<button type=\"button\" class=\"btn btn-warning modify-reply\">수정</button>\r\n");
          out.write("							<button type=\"button\" class=\"btn btn-danger delete-reply\" value=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${reply.seq_reply}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\">삭제</button>\r\n");
          out.write("						</div>\r\n");
          out.write("						<div class=\"col-3 body-btnAfter-reply\">\r\n");
          out.write("							<button type=\"button\" class=\"btn btn-secondary cancel-reply\">취소</button>\r\n");
          out.write("							<button type=\"button\" class=\"btn btn-primary complete-reply\" value=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${reply.seq_reply}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\">완료</button>\r\n");
          out.write("						</div>\r\n");
          out.write("					");
          int evalDoAfterBody = _jspx_th_c_005fif_005f2.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f2);
      _jspx_th_c_005fif_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f2, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f3(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f3 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f3_reused = false;
    try {
      _jspx_th_c_005fif_005f3.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f3.setParent(null);
      // /board/detailView.jsp(216,3) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f3.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginSession.id eq dto.writer_id}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f3 = _jspx_th_c_005fif_005f3.doStartTag();
      if (_jspx_eval_c_005fif_005f3 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("				<div class=\"col-2\">\r\n");
          out.write("					<button type=\"button\" class=\"btn btn-warning\" id=\"btnModify\">수정</button>\r\n");
          out.write("				</div>\r\n");
          out.write("				<div class=\"col-2\">\r\n");
          out.write("					<button type=\"button\" class=\"btn btn-danger\" id=\"btnDelete\">삭제</button>\r\n");
          out.write("				</div>\r\n");
          out.write("				<script>\r\n");
          out.write("                    $(\"#btnModify\").on(\"click\", function() { // 수정 페이지 요청\r\n");
          out.write("                        location.href = \"/modify.bo?seq_board=");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.seq_board}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\";\r\n");
          out.write("                    });\r\n");
          out.write("                    $(\"#btnDelete\").on(\"click\",function() { // 삭제 요청\r\n");
          out.write("                        let answer = confirm(\"지금 삭제하시면 복구가 불가합니다. 정말 삭제하시겠습니까?\");\r\n");
          out.write("                        console.log(answer);\r\n");
          out.write("                        if (answer) {\r\n");
          out.write("                            location.href = \"/deleteProc.bo?seq_board=");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.seq_board}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\";\r\n");
          out.write("                        }\r\n");
          out.write("                    })\r\n");
          out.write("                </script>\r\n");
          out.write("			");
          int evalDoAfterBody = _jspx_th_c_005fif_005f3.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f3);
      _jspx_th_c_005fif_005f3_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f3, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f3_reused);
    }
    return false;
  }
}
