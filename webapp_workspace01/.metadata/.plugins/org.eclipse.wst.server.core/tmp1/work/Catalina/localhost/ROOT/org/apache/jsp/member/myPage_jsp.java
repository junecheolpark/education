/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.78
 * Generated at: 2022-05-17 13:00:41 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class myPage_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.6.0.slim.min.js\"\r\n");
      out.write("	integrity=\"sha256-u7e5khyithlIdTpu22PHhENmPcRdFiHRjhAuHcs05RI=\" crossorigin=\"anonymous\"\r\n");
      out.write("></script>\r\n");
      out.write("<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css\"\r\n");
      out.write("	rel=\"stylesheet\"\r\n");
      out.write("	integrity=\"sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3\"\r\n");
      out.write("	crossorigin=\"anonymous\"\r\n");
      out.write(">\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js\"\r\n");
      out.write("	integrity=\"sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p\"\r\n");
      out.write("	crossorigin=\"anonymous\"\r\n");
      out.write("></script>\r\n");
      out.write("<script src=\"//t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js\"></script>\r\n");
      out.write("<title>정보수정</title>\r\n");
      out.write("<style>\r\n");
      out.write(".c_text {\r\n");
      out.write("	width: 100%;\r\n");
      out.write("	height: 40x;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".btn_box {\r\n");
      out.write("	width: 100%;\r\n");
      out.write("	height: 40x;\r\n");
      out.write("	line-height: 20px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".row {\r\n");
      out.write("	margin-top: 20px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("	<form id=\"modifyForm\" action=\"/modifyProc.mem\" method=\"post\">\r\n");
      out.write("		<div class=\"container\">\r\n");
      out.write("			<div class=\"row\">\r\n");
      out.write("				<div class=\"col\">\r\n");
      out.write("					<h2>정보 수정</h2>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("			<!-- 아이디 입력 -->\r\n");
      out.write("			<div class=\"row\">\r\n");
      out.write("				<div class=\"col-4\">아이디(Email)</div>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"row\">\r\n");
      out.write("				<div class=\"col-8\">\r\n");
      out.write("					<input type=\"text\" class=\"c_text\" id=\"id\" name=\"id\" value=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.getId()}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(">\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("			<!-- 닉네임 -->\r\n");
      out.write("			<div class=\"row\">\r\n");
      out.write("				<div class=\"col-4\">닉네임</div>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"row\">\r\n");
      out.write("				<div class=\"col\">\r\n");
      out.write("					<input type=\"text\" class=\"c_text\" id=\"nickname\" name=\"nickname\" value=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.getNickname()}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(">\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("			<!-- 휴대폰 번호 -->\r\n");
      out.write("			<div class=\"row\">\r\n");
      out.write("				<div class=\"col-4\">휴대폰 번호</div>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"row\">\r\n");
      out.write("				<div class=\"col-4\">\r\n");
      out.write("					<select class=\"c_text\" id=\"phone1\">\r\n");
      out.write("						<option value=\"010\">010</option>\r\n");
      out.write("						<option value=\"011\">011</option>\r\n");
      out.write("						<option value=\"017\">018</option>\r\n");
      out.write("						<option value=\"018\">018</option>\r\n");
      out.write("					</select>\r\n");
      out.write("\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"col-4\">\r\n");
      out.write("					<input class=\"c_text\" id=\"phone2\" type=\"text\" maxlength=\"4\">\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"col-4\">\r\n");
      out.write("					<input class=\"c_text\" id=\"phone3\" type=\"text\" maxlength=\"4\">\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"col d-none\">\r\n");
      out.write("					<input class=\"c_text\" id=\"phone\" type=\"text\" name=\"phone\">\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("			<!-- 우편번호 -->\r\n");
      out.write("			<div class=\"row\">\r\n");
      out.write("				<div class=\"col-6\">\r\n");
      out.write("					<input type=\"text\" class=\"c_text\" id=\"postal\" name=\"postcode\" value=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.getPostcode()}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(">\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"col-6\">\r\n");
      out.write("					<button type=\"button\" class=\"btn btn-warning btn_box\" id=\"btnPostCode\">우편번호 찾기</button>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("			<!-- 도로명 주소 -->\r\n");
      out.write("			<div class=\"row\">\r\n");
      out.write("				<div class=\"col\">\r\n");
      out.write("					<input type=\"text\" class=\"c_text\" id=\"road\" name=\"roadAddr\" value=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.getRoadAddr()}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(">\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("			<!-- 상세주소 -->\r\n");
      out.write("			<div class=\"row\">\r\n");
      out.write("				<div class=\"col-6\">\r\n");
      out.write("					<input type=\"text\" class=\"c_text\" name=\"detailAddr\" value=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.getDetailAddr()}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(">\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"col-6\">\r\n");
      out.write("					<input type=\"text\" class=\"c_text\" id=\"extraAddr\" name=\"extraAddr\" value=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.getExtraAddr()}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(">\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("			<div class=\"row justify-content-center btn-before\">\r\n");
      out.write("				<div class=\"col-2\">\r\n");
      out.write("					<button type=\"button\" id=\"backBtn\" class=\"btn btn-secondary\">뒤로가기</button>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"col-2\">\r\n");
      out.write("					<button type=\"button\" id=\"modifyBtn\" class=\"btn btn-primary\">수정</button>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("			<div class=\"row justify-content-md-center btn-after d-none\">\r\n");
      out.write("				<div class=\"col-2\">\r\n");
      out.write("					<button type=\"button\" id=\"cancelBtn\" class=\"btn btn-secondary\">취소</button>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"col-2\">\r\n");
      out.write("					<button type=\"button\" id=\"completeBtn\" class=\"btn btn-primary\">완료</button>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("	</form>\r\n");
      out.write("	<script>\r\n");
      out.write("		// 우편찾기, input창 수정 불가\r\n");
      out.write("		btnPostCode.disabled = true;\r\n");
      out.write("		$('input').attr('readonly', true);\r\n");
      out.write("\r\n");
      out.write("		//수정버튼 누르면 id제외 readonly 풀기\r\n");
      out.write("		$(\"#modifyBtn\").on(\"click\", function() {\r\n");
      out.write("			$(\"input\").not(\"#id\").attr(\"readonly\", false);\r\n");
      out.write("			btnPostCode.disabled = false;\r\n");
      out.write("			$(\".btn-before\").css(\"display\", \"none\");// 기존의 버튼 감추기\r\n");
      out.write("			$(\".btn-after\").removeClass(\"d-none\"); // 취소, 완료버튼 보여주기\r\n");
      out.write("		})\r\n");
      out.write("\r\n");
      out.write("		// 취소버튼 누르면 수정페이지로 돌아가기\r\n");
      out.write("		$(\"#cancelBtn\").on(\"click\", function() {\r\n");
      out.write("			location.href = \"/mypageProc.mem\";\r\n");
      out.write("		})\r\n");
      out.write("\r\n");
      out.write("		//뒤로가기 버튼누르면 index 페이지로 돌아가기\r\n");
      out.write("		$(\"#backBtn\").on(\"click\", function() {\r\n");
      out.write("			location.href = \"loginProc.mem\";\r\n");
      out.write("		})\r\n");
      out.write("\r\n");
      out.write("		// 폰번호 추가하기\r\n");
      out.write("		let phone = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.getPhone()}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"\r\n");
      out.write("		console.log(phone);\r\n");
      out.write("		let phone1 = phone.slice(0, 3);\r\n");
      out.write("		console.log(\"phone1:\" + phone1);\r\n");
      out.write("		let phone2 = phone.slice(3, 7);\r\n");
      out.write("		console.log(\"phone2:\" + phone2);\r\n");
      out.write("		let phone3 = phone.slice(7);\r\n");
      out.write("		console.log(\"phone3:\" + phone3);\r\n");
      out.write("\r\n");
      out.write("		$(\"#phone1\").val(phone1).prop(\"selected\", true);\r\n");
      out.write("		$(\"#phone2\").val(phone2);\r\n");
      out.write("		$(\"#phone3\").val(phone3);\r\n");
      out.write("\r\n");
      out.write("		//정규식\r\n");
      out.write("\r\n");
      out.write("		$(\"#completeBtn\").on(\r\n");
      out.write("				\"click\",\r\n");
      out.write("				function() {\r\n");
      out.write("					let regexNickname = /^[a-zA-Z0-9ㄱ-힣]{4,8}$/;\r\n");
      out.write("					let regexPhone = /[0-9]{11}/; //휴대전화 정규식\r\n");
      out.write("					let regexPostal = /\\S/;\r\n");
      out.write("					let regexRoad = /\\S/;\r\n");
      out.write("\r\n");
      out.write("					// phone번호 합쳐주는 작업\r\n");
      out.write("					// select 박스에서 선택된 값을 가져오는 방법 (selected된 옵션의 value값 가져옴)\r\n");
      out.write("					let phone = $(\"#phone1 option:selected\").val()\r\n");
      out.write("							+ $(\"#phone2\").val() + $(\"#phone3\").val()\r\n");
      out.write("					console.log(phone);\r\n");
      out.write("					$(\"#phone\").val(phone);\r\n");
      out.write("\r\n");
      out.write("					if ($(\"#id\").val() === \"\") {\r\n");
      out.write("						alert(\"아이디를 입력해 주세요.\");\r\n");
      out.write("						return;\r\n");
      out.write("					} else if (!regexNickname.test($(\"#nickname\").val())) {\r\n");
      out.write("						alert(\"닉네임 형식에 일치하지 않는 입력값입니다.\")\r\n");
      out.write("						return;\r\n");
      out.write("					} else if (!regexPhone.test(phone)) {\r\n");
      out.write("						alert(\"전화번호 형식에 일치하지 않는 입력값입니다.\")\r\n");
      out.write("						return;\r\n");
      out.write("					} else if (!regexPostal.test($(\"#postal\").val())) {\r\n");
      out.write("						alert(\"우편번호를 입력해주세요\")\r\n");
      out.write("						return;\r\n");
      out.write("					} else if (!regexRoad.test($(\"#road\").val())) {\r\n");
      out.write("						alert(\"도로명주소를 입력해주세요\")\r\n");
      out.write("						return;\r\n");
      out.write("					}\r\n");
      out.write("					alert (\"수정이 완료되었습니다!\")\r\n");
      out.write("					document.getElementById(\"modifyForm\").submit();\r\n");
      out.write("\r\n");
      out.write("				});\r\n");
      out.write("\r\n");
      out.write("		// 다음 우편번호 api 띄우기\r\n");
      out.write("		$(\"#btnPostCode\")\r\n");
      out.write("				.on(\r\n");
      out.write("						\"click\",\r\n");
      out.write("						function() {\r\n");
      out.write("							new daum.Postcode(\r\n");
      out.write("									{\r\n");
      out.write("										oncomplete : function(data) {\r\n");
      out.write("											var roadAddr = data.roadAddress; // 도로명 주소 변수\r\n");
      out.write("											var extraRoadAddr = ''; // 참고 항목 변수\r\n");
      out.write("\r\n");
      out.write("											if (data.bname !== ''\r\n");
      out.write("													&& /[동|로|가]$/g\r\n");
      out.write("															.test(data.bname)) {\r\n");
      out.write("												extraRoadAddr += data.bname;\r\n");
      out.write("											}\r\n");
      out.write("											// 건물명이 있고, 공동주택일 경우 추가한다\r\n");
      out.write("											if (data.buildingName !== ''\r\n");
      out.write("													&& data.apartment === 'Y') {\r\n");
      out.write("												extraRoadAddr += (extraRoadAddr !== '' ? ', '\r\n");
      out.write("														+ data.buildingName\r\n");
      out.write("														: data.buildingName);\r\n");
      out.write("											}\r\n");
      out.write("											// 표시할 참고항목이 있을 경우, 괄호까지 추가한 최종 문자열을 만든다.\r\n");
      out.write("											if (extraRoadAddr !== '') {\r\n");
      out.write("												extraRoadAddr = ' ('\r\n");
      out.write("														+ extraRoadAddr + ')';\r\n");
      out.write("											}\r\n");
      out.write("\r\n");
      out.write("											// 우편번호와 주소 정보를 해당 필드에 넣는다.\r\n");
      out.write("											$(\"#postal\").val(data.zonecode);\r\n");
      out.write("											$(\"#road\").val(roadAddr);\r\n");
      out.write("\r\n");
      out.write("											// 참고항목 문자열이 있을 경우 해당 필드에 넣는다.\r\n");
      out.write("											if (roadAddr !== '') {\r\n");
      out.write("												$(\"#extraAddr\").val(\r\n");
      out.write("														extraRoadAddr);\r\n");
      out.write("											} else {\r\n");
      out.write("												$(\"#extraAddr\").val(\"\");\r\n");
      out.write("											}\r\n");
      out.write("										}\r\n");
      out.write("									}).open();\r\n");
      out.write("						})\r\n");
      out.write("	</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
